#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞ —Å –ø–æ–º–æ—â—å—é Nuitka
–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤–∞—Ä–∏–π–Ω—ã–º–∏ —Å–∏–≥–Ω–∞–ª–∞–º–∏
"""

import os
import sys
import subprocess
import shutil
from pathlib import Path

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∫–∏"""
    print("=" * 60)
    print("üî® –°–±–æ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞ —Å –ø–æ–º–æ—â—å—é Nuitka")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Nuitka
    try:
        import nuitka
        print("‚úÖ Nuitka –Ω–∞–π–¥–µ–Ω")
    except ImportError:
        print("‚ùå Nuitka –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install nuitka")
        return
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Å–±–æ—Ä–∫–∏
    build_dir = Path("dist")
    if build_dir.exists():
        print("üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –ø–∞–ø–∫—É —Å–±–æ—Ä–∫–∏...")
        shutil.rmtree(build_dir)
    build_dir.mkdir()
    
    # –¢–∞–∫–∂–µ —É–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã Nuitka
    temp_dirs = ["run_server.build", "run_server.dist", "run_server.onefile-build"]
    for temp_dir in temp_dirs:
        temp_path = Path(temp_dir)
        if temp_path.exists():
            print(f"üóëÔ∏è  –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É: {temp_dir}")
            shutil.rmtree(temp_path)
    
    print(f"üìÅ –ü–∞–ø–∫–∞ —Å–±–æ—Ä–∫–∏: {build_dir.absolute()}")
    
    # –ö–æ–º–∞–Ω–¥–∞ —Å–±–æ—Ä–∫–∏
    cmd = [
        sys.executable, "-m", "nuitka",
        "--standalone",
        "--include-package=django",
        "--include-package=rest_framework",
        "--include-package=alarm_manager",
        "--include-package=alarms",
        "--output-dir=dist",
        "--assume-yes-for-downloads",
        "--show-progress",
        "--show-memory",
        "--remove-output",
        "run_server.py"
    ]
    
    print("\nüöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É...")
    print(f"–ö–æ–º–∞–Ω–¥–∞: {' '.join(cmd)}")
    print("-" * 60)
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É
        result = subprocess.run(cmd, check=True)
        
        if result.returncode == 0:
            print("\n‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            
            # –ö–æ–ø–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã
            exe_dir = build_dir / "run_server.dist"
            if exe_dir.exists():
                print(f"üì¶ –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª: {exe_dir}")
                
                # –ö–æ–ø–∏—Ä—É–µ–º Django —Ñ–∞–π–ª—ã
                files_to_copy = [
                    "manage.py",
                    "db.sqlite3",
                    "alarm_manager",
                    "alarms",
                    "templates",
                    "static"
                ]
                
                print("\nüìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞...")
                for file_name in files_to_copy:
                    src = Path(file_name)
                    dst = exe_dir / file_name
                    
                    if src.exists():
                        if src.is_file():
                            shutil.copy2(src, dst)
                        else:
                            if dst.exists():
                                shutil.rmtree(dst)
                            shutil.copytree(src, dst)
                        print(f"  ‚úÖ {file_name}")
                    else:
                        print(f"  ‚ö†Ô∏è  {file_name} (–Ω–µ –Ω–∞–π–¥–µ–Ω)")
                
                # –°–æ–∑–¥–∞–µ–º README –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                readme_content = """# –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤–∞—Ä–∏–π–Ω—ã–º–∏ —Å–∏–≥–Ω–∞–ª–∞–º–∏

## –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

1. –î–≤–∞–∂–¥—ã –∫–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ —Ñ–∞–π–ª `run_server.exe`
2. –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
3. –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ –∞–¥—Ä–µ—Å—É http://127.0.0.1:8000

## –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞

–ù–∞–∂–º–∏—Ç–µ Ctrl+C –≤ –æ–∫–Ω–µ –∫–æ–Ω—Å–æ–ª–∏ –∏–ª–∏ –∑–∞–∫—Ä–æ–π—Ç–µ –æ–∫–Ω–æ.

## –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤

- `run_server.exe` - –≥–ª–∞–≤–Ω—ã–π –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª
- `manage.py` - —Ñ–∞–π–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Django
- `db.sqlite3` - –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
- `alarm_manager/` - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
- `alarms/` - –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–≤–∞—Ä–∏–π–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤
- `templates/` - HTML —à–∞–±–ª–æ–Ω—ã
- `static/` - —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã

## –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

- ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü–∞–º–∏ –∞–≤–∞—Ä–∏–π–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤
- ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤–∞—Ä–∏–π–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –ª–æ–≥–∏–∫–∏
- ‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ JSON —Ñ–∞–π–ª
- ‚úÖ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏ —É–¥–æ–±–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å

## –ü–æ–¥–¥–µ—Ä–∂–∫–∞

–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:
1. –ê–Ω—Ç–∏–≤–∏—Ä—É—Å –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
2. –ü–æ—Ä—Ç 8000 –Ω–µ –∑–∞–Ω—è—Ç –¥—Ä—É–≥–∏–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏
3. –ë—Ä–∞—É–∑–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–µ–±-—Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã
"""
                
                readme_file = exe_dir / "README.txt"
                with open(readme_file, 'w', encoding='utf-8') as f:
                    f.write(readme_content)
                
                print(f"\nüìñ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª README: {readme_file}")
                print(f"\nüéâ –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –≥–æ—Ç–æ–≤!")
                print(f"üìÅ –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {exe_dir.absolute()}")
                print(f"üöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞: {exe_dir / 'run_server.exe'}")
                
            else:
                print("‚ùå –ü–∞–ø–∫–∞ —Å –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º —Ñ–∞–π–ª–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ (–∫–æ–¥: {result.returncode})")
            
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ: {e}")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 60)
    input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

if __name__ == "__main__":
    main() 
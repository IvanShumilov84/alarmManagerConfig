#!/usr/bin/env python3
"""–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ Django-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ exe-—Ñ–∞–π–ª —Å –ø–æ–º–æ—â—å—é PyInstaller."""

import os
import sys
import subprocess
import shutil


def create_run_server_script():
    """–°–æ–∑–¥–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Django-—Å–µ—Ä–≤–µ—Ä–∞"""
    script_content = '''#!/usr/bin/env python3
import os
import sys
import webbrowser
import threading
import time

def open_browser():
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π"""
    time.sleep(2)  # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    webbrowser.open('http://127.0.0.1:8000')

def main():
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    if getattr(sys, 'frozen', False):
        # –ï—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ –∏–∑ exe
        application_path = os.path.dirname(sys.executable)
    else:
        # –ï—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ –∏–∑ Python
        application_path = os.path.dirname(os.path.abspath(__file__))
    
    os.chdir(application_path)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Django
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'alarm_manager.settings')
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º sys.argv –¥–ª—è Django
    sys.argv = ['manage.py', 'runserver', '127.0.0.1:8000']
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    browser_thread = threading.Thread(target=open_browser)
    browser_thread.daemon = True
    browser_thread.start()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Django
    try:
        from django.core.management import execute_from_command_line
        execute_from_command_line(sys.argv)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Django: {e}")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

if __name__ == '__main__':
    main()
'''

    with open("run_server.py", "w", encoding="utf-8") as f:
        f.write(script_content)

    print("‚úì –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç run_server.py")


def create_spec_file():
    """–°–æ–∑–¥–∞–µ—Ç spec-—Ñ–∞–π–ª –¥–ª—è PyInstaller"""
    spec_content = """# -*- mode: python ; coding: utf-8 -*-

block_cipher = None

a = Analysis(
    ['run_server.py'],
    pathex=[],
    binaries=[],
    datas=[
        ('manage.py', '.'),
        ('db.sqlite3', '.'),
        ('templates', 'templates'),
        ('static', 'static'),
        ('alarm_manager', 'alarm_manager'),
        ('alarms', 'alarms'),
    ],
    hiddenimports=[
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',
        'alarms',
        'alarm_manager.settings',
        'alarm_manager.urls',
        'alarm_manager.wsgi',
    ],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name='AlarmManager',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=True,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
    icon=None,
)
"""

    with open("AlarmManager.spec", "w", encoding="utf-8") as f:
        f.write(spec_content)

    print("‚úì –°–æ–∑–¥–∞–Ω spec-—Ñ–∞–π–ª AlarmManager.spec")


def build_executable():
    """–°–æ–±–∏—Ä–∞–µ—Ç exe-—Ñ–∞–π–ª —Å –ø–æ–º–æ—â—å—é PyInstaller"""
    print("üî® –ù–∞—á–∏–Ω–∞—é —Å–±–æ—Ä–∫—É exe-—Ñ–∞–π–ª–∞...")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ PyInstaller
    try:
        import PyInstaller

        print(f"‚úì PyInstaller –≤–µ—Ä—Å–∏–∏ {PyInstaller.__version__} –Ω–∞–π–¥–µ–Ω")
    except ImportError:
        print("‚ùå PyInstaller –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é...")
        subprocess.run(
            [sys.executable, "-m", "pip", "install", "pyinstaller"], check=True
        )
        print("‚úì PyInstaller —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–∞–ø–∫–∏ —Å–±–æ—Ä–∫–∏
    for folder in ["build", "dist"]:
        if os.path.exists(folder):
            shutil.rmtree(folder)
            print(f"‚úì –£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞ {folder}")

    # –ó–∞–ø—É—Å–∫–∞–µ–º PyInstaller
    cmd = [sys.executable, "-m", "PyInstaller", "AlarmManager.spec", "--noconfirm"]
    print(f"–í—ã–ø–æ–ª–Ω—è—é –∫–æ–º–∞–Ω–¥—É: {' '.join(cmd)}")

    result = subprocess.run(cmd, capture_output=True, text=True)

    if result.returncode == 0:
        print("‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        exe_path = os.path.abspath("dist/AlarmManager.exe")
        print(f"üìÅ Exe-—Ñ–∞–π–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤: {exe_path}")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ:")
        print(result.stderr)
        return False

    return True


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏ Django-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ exe-—Ñ–∞–π–ª")
    print("=" * 50)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    required_files = ["manage.py", "db.sqlite3", "alarm_manager/settings.py"]
    for file in required_files:
        if not os.path.exists(file):
            print(f"‚ùå –§–∞–π–ª {file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return False

    print("‚úì –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã")

    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞
    create_run_server_script()

    # –°–æ–∑–¥–∞–µ–º spec-—Ñ–∞–π–ª
    create_spec_file()

    # –°–æ–±–∏—Ä–∞–µ–º exe-—Ñ–∞–π–ª
    if build_executable():
        print("\nüéâ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:")
        print("1. Exe-—Ñ–∞–π–ª: dist/AlarmManager.exe")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ exe-—Ñ–∞–π–ª –¥–≤–æ–π–Ω—ã–º –∫–ª–∏–∫–æ–º")
        print("3. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –±—Ä–∞—É–∑–µ—Ä —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º")
        print("4. –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–∫—Ä–æ–π—Ç–µ –æ–∫–Ω–æ –∫–æ–Ω—Å–æ–ª–∏")
        # –ö–æ–ø–∏—Ä—É–µ–º manage.py –≤ dist/AlarmManager/
        import shutil

        dist_dir = os.path.join("dist", "AlarmManager")
        src_manage = "manage.py"
        dst_manage = os.path.join(dist_dir, "manage.py")
        if os.path.exists(dist_dir):
            shutil.copy2(src_manage, dst_manage)
            print(f"‚úì manage.py —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ {dst_manage}")
        else:
            print(f"‚ùå –ü–∞–ø–∫–∞ {dist_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
    else:
        print("\n‚ùå –°–±–æ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å!")


if __name__ == "__main__":
    main()
